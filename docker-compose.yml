services:
  backend:
    networks:
      - idea-space
    build:
      context: ./backend
      dockerfile: Dockerfile
    command:  sh -c "poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/code
      - static-data:/backend/static
      - media-data:/backend/media
    environment:
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.settings}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    tty: true

  frontend:
    networks:
      - idea-space
    build:
      context: ./frontend
      dockerfile: Dockerfile
    tmpfs:
      - '/tmp/nitro'
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
#    depends_on:
#      - backend
    tty: true

  db:
    networks:
      - idea-space
    image: postgres:15
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    networks:
      - idea-space
    image: redis:6-alpine
    container_name: redis
    ports:
      - "6380:6379"
    command: redis-server

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "poetry run celery -A config worker --loglevel=info"
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    networks:
      - idea-space
    env_file:
      - .env

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "poetry run celery -A config beat --loglevel=info"
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    networks:
      - idea-space
    env_file:
      - .env


volumes:
  pg-data:
  static-data:
  media-data:

networks:
  idea-space:
    driver: bridge